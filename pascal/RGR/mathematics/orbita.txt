Ведение:

Пренебрегая размерами тел, будем пользоваться термином материальные точки, или просто точки.

Дифференциальное уравнение кривых второго порядка:

    (1)

a(t) - угол между большой осью  и радиусом от точки до фокуса.

e – эксцентриситет.


Движение одной материальной точки вокруг относительно неподвижной второй точки.
Масса первой точки много меньше массы второй. Известно максимальное и минимальное расстояние между точками, второе тело находится в одном из фокусов эллипса, тогда движение первой точки можно вычислить по формуле (1).

Движение двух точек вокруг общего центра масс.
Массы точек сопоставимы и известны m1,m2. Известно максимальноеи минимальное расстояние между точками – a12,b12.



Рис. 1 

Совместим центр масс и начало координат. Вычислим полуоси эллипсов – a1, b1, a2, b2:
                (2)
                  (3)
    (4)
    (5) 

Из системы уравнений (2) – (5) находим:
 

 


Вычисляем эксцентриситеты. Точки движутся синхронно, иначе столкнутся. Рассчитываем движение точек  по формуле (1).


Движение трёх и более точек вокруг общего центра масс со следующими условиями:
a)      Известны массы точек  m1,m2, m3.  Система точек имеет общий центр вращения. Совместим общий центр точек с началом координат.

b)      Известно максимальное и минимальное расстояние между точками.   

c)      Точки вращаются по своим орбитам парно синхронно.  

Алгоритм

a)      связный граф до общего центра вращения, через промежуточные центры вращения пар, в которых участвовала данная точка.

b)       Вычисляем орбиты заданных точек. Орбита каждой точки есть сумма орбит её графа. Здесь происходит Из исходных данных  вычисляем координаты объектов относительно общего центр вращения. Общий центр вращения считаем неподвижным.

c)      Выбираем начальную точку графа.

d)     Остальные точки разбиваем на пары.

e)      Вычисляем координаты центров вращения пар точек и присваиваем центрам массу равную сумме масс соответствующей пары точек.

f)       Для каждой пары проводим вычисление по алгоритму пункта 2. Движение двух точек вокруг общего центра масс.

g)      Получили новую систему точек: начальная точка + точки центров масс для нечётного числа, начальная точка + точки центров масс + 1 для чётного числа заданной системы точек. Повторяем пункты c), d), e) для новой системы точек

h)      Пункт f) повторяем в цикле, пока не останется система из двух точек, начальная точка + центр масс остальных изначально заданных точек. Выполняем последний раз пункт 2.

i)        От каждой точки строится сложение координат относительных систем отсчёта.

Углы, угловые скорости, угловые ускорения, параметрические радиусы вычисляются по формуле (1) программой ZweiObjekte1Winkel.exe. Углы, угловые скорости, угловые ускорения, параметрические радиусы записываются  в файлы ellpi*.txt.

Примеры:  


Все точки имеют период вращения T = 1. Задаётся точность вычисления – число точек на траектории (вычисляется 100 точек на каждом эллипсе). Интервал равен  T/100 = 0.01.

Пример 1. Рис. 1. Два объекта. Видео ролик Objectes2.swf.html.


Пример 2. Рис. 2

 

Рис. 2

Имеем три объекта равной массы m1:m2:m3 = 1:1:1. Все орбиты – эллипсы. Расстояние между объектами задано, p1p2 = p2p3 = p3p1 = 8. Задан эксцентриситет ex = 0.6.  Строим граф орбит.  Центры вращения вычисляются по правилу центров масс. Имеем три варианта:  p1(p2,p3), p2(p1,p3), p3(p1,p2). Ввиду симметрии системы графы эквивалентны. Возьмём граф p3(p1,p2) = (p3,O12). Знак равенства означает, что каждое звено графа заменено центром масс точек звена, например (p1,p2) = O12. Вычисления начинаются с внутренних скобок.

Вычисляем большие и малые оси. Вычисляем  скорости движения объектов в точках орбит с  заданным интервалом по времени. Полученные углы, угловые скорости, угловые ускорения, параметрические радиусы записаны в файлы ellpi*.txt. Программа Objecte3-1-1-1 вычисляет орбиты объектов по описанному алгоритму. Видеоролик Objectes3-1-1-1.swf.html. Исполняемый файл Objecte3-1-1-1.exe,  файлы данных ellpi*.txt в  папке            Objectes3-1-1-1.

Видеоролики в папке ObjectesVideosHTML.

В виду симметрии все три объекта должны иметь одинаковые орбиты и иметь симметрию относительно центра вращения. Что и видно на рис. 3.  


Рис. 3

Пример 3. Рис. 4.



Рис. 4

Зададим   массы m1:m2:m3 = 1:2:3, Имеем координаты объектов относительно центра вращения. Все орбиты – эллипсы. Задаём эксцентриситет ex = 0.3.  Строим граф орбит.  Имеем три варианта:  p1(p2,p3), p2(p1,p3), p3(p1,p2). Возьмём  граф p1(p2,p3) = (p1,c23). Вычисляем большие и малые оси. Все объекты имеют период вращения T = 1, этим обеспечивается синхронность движения. Рассчитываем скорости движения объектов в точках орбит с  шагом по времени 0.01*T. Данные углов, угловых скоростей, угловых ускорений, параметрических радиусов находятся в файлах ellpi*.txt.  Программа Objecte3-1-2-3  вычисляет орбиты объектов по описанному алгоритму. Видеоролик Objectes3-1-2-3.swf.html. Исполняемый файл Objecte3-1-2-3.exe,  файлы данных ellpi*.txt в  папке Objectes3-1-2-3. 


Рис. 5. Орбиты объектов примера 3.

Пример 3а. Рис. 6.


Рис. 6

Повторим пример 3 с другим графом орбит p3(p1,p2) = (p3,c12). Данные углов, угловых скоростей, угловых ускорений, параметрических радиусов находятся в файлах ellpi*.txt.  Программа Objecte3-1-2-3a  вычисляет орбиты объектов по описанному алгоритму. Видеоролик Objectes3-1-2-3a.swf.html. Исполняемый файл Objecte3-1-2-3a.exe,   файлы данных ellpi*.txt в  папке Objectes3-1-2-3a.


Рис. 7. Орбиты объектов примера 3а.

Видим, что рис. 5 и рис. 7 подобны, т.е. орбиты примеров 2 и 2а качественно схожи.   Требуется найти функцию подобия графов p1(p2,p3) и  p3(p1,p2). Возможно, необходимы более точные вычисления.

Пример 4. Рис. 8


Рис. 8

Положим  массы m1:m2:m3 = 1:2:3:4, Имеем координаты объектов относительно центра вращения. Все орбиты – эллипсы. Задаём эксцентриситет ex=0.3.  Строим граф орбит.  


Возьмём  граф p4(p1(p2,p3)) = p4(p1,с23)) = (р4,с123). Вычисляем большие и малые оси. Все объекты имеют период вращения T = 1, этим обеспечивается синхронность движения. Рассчитываем скорости движения объектов в точках орбит с  угловым шагом 0.01*2?. Данные углов, угловых скоростей, угловых ускорений, параметрических радиусов находятся в файлах ellpi*.txt.  Программа Objecte4-1-2-3-4  вычисляет орбиты объектов по описанному алгоритму. Видеоролик Objectes4-1-2-3-4.swf.html. Исполняемый файл Objecte4-1-2-4.exe, файлы данных ellpi*.txt в  папке Objectes4-1-2-3-4. 


Рис  9. Объекты - p1, p2, p3, p4. Центры вращения – c0, c12, c123.

Пример 5. Смоделируем вращение двух одинаковых тел вокруг третьего,  подобных спутникам Сатурна Янусу и Эпиметею. Положим период вращения вокруг центрального тела, равен 1году, за 1 период 4 пересечения орбит. Получаем 3-х кратное взаимное вращение, вокруг центра вращения двух тел (Януса и Эпиметея).  


Рис  10.

Пример 5а. Обратные условия, задаем 5 вращений первых двух тел относительно друг друга (подобно Луна с Землёй). Получаем 8  пересечений орбит за 1 период вращения вокруг центрального тела 3.  6 периодов – 10 пересечений.

N периодов  =  2N-2 пересечений орбит.

 

И так далее для заданного числа тел получаем орбиты относительно общего центра вращения.

Данные углов, угловых скоростей, угловых ускорений, параметрических радиусов находятся в файлах ellpi*.txt.  Программа Pendel3_1_2GraphOpenGl вычисляет орбиты объектов по описанному алгоритму. Видеоролик Ja-E_4p.swf.html. Исполняемый файл Pendel3_1_2GraphOpenGl.exe, файлы данных ellpi*.txt в  папке Pendel3_1_2GraphOpenGl. 

Заключение:

Математика. 


a)      Выявить  и доказать свойства уравнения (1).

b)      Доказать эквивалентность (подобие) графов системы при различных начальных точках. Примеры 3 и 3а.

Астрономия.

a)      Проверить и доказать (не) соответствие с реальными системам объектов, т.е. правомочность пункта 3.i).

В примерах вычисление орбит производилось без учёта прецессии. Обозначим прецессию перицентра буквой dp, тогда интегрируем уравнение (1) от 0 до ?+dp. В результате вычисления также получаем прецессию апоцентра da. При следующем  цикле смещаем 0 на величину da.

Физика.

Имеется физическая модель, которая привела автора к выводу уравнения (1) и алгоритма орбит.

Дополнения:


Все видеоролики находятся по адресу  http://www.fayloobmennik.net/4823487

Исполняемые файлы находятся по адресу http://www.fayloobmennik.net/4909818

Исходные коды находятся по адресу http://copyright.gov/eco/  Title: ClosedTrackSystemObjects, Case Number: 1-2149827051. Или обратиться к автору.

При решении уравнения (1) применялась подпрограмма DE38R [1].